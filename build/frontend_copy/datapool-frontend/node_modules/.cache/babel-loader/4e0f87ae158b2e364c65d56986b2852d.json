{"ast":null,"code":"import DeleteStorageFileDialog from '@/components/DeleteStorageFileDialog.vue';\nimport StorageImportDialog from '@/components/StorageImportDialog.vue';\nimport { mapGetters } from 'vuex';\nimport apiClient from '@/plugins/backendClient.js';\nimport { mapActions } from 'vuex';\nexport default {\n  components: {\n    DeleteStorageFileDialog,\n    StorageImportDialog\n  },\n\n  data() {\n    return {\n      upload_file: {},\n      search: '',\n      headers: [{\n        text: 'fileName',\n        align: 'start',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'size',\n        value: 'size'\n      }, {\n        text: '',\n        value: 'actions'\n      }]\n    };\n  },\n\n  methods: { ...mapGetters(['GET_STORAGE', 'GET_CURRENT_PROJECT']),\n    ...mapActions(['REFRESH_CURRENT_PROJECT']),\n\n    upload_file_request() {\n      console.log(this.upload_file);\n      let data = new FormData();\n      data.append('file', this.upload_file);\n      apiClient.post_upload_file(data, this.GET_CURRENT_PROJECT().id).then(response => {\n        console.log(response.data);\n        this.REFRESH_CURRENT_PROJECT(this.GET_CURRENT_PROJECT());\n      });\n    },\n\n    download_url(item) {\n      return apiClient.server_endpoint + item.download;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8DA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC,uBADA;IAEAC;EAFA,CADA;;EAKAC;IACA;MACAC,eADA;MAEAC,UAFA;MAGAC,UACA;QACAC,gBADA;QAEAC,cAFA;QAGAC,eAHA;QAIAC;MAJA,CADA,EAOA;QAAAH;QAAAG;MAAA,CAPA,EAQA;QAAAH;QAAAG;MAAA,CARA;IAHA;EAcA,CApBA;;EAqBAC,WACA,eACA,aADA,EAEA,qBAFA,EADA;IAKA,eACA,yBADA,EALA;;IAQAC;MACAC;MACA;MACAV;MACAW;QACAD;QACA;MACA,CAHA;IAIA,CAhBA;;IAiBAE;MACA;IACA;;EAnBA;AArBA","names":["components","DeleteStorageFileDialog","StorageImportDialog","data","upload_file","search","headers","text","align","sortable","value","methods","upload_file_request","console","apiClient","download_url"],"sourceRoot":"src/pages","sources":["DatapoolStorage.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n      <v-card class=\"my-4\" flat>\n        <v-card-content class=\"d-flex flex-row-reverse\">\n            <v-btn\n              class=\"ma-4\"\n              fab\n              dark\n              color=\"indigo\"\n              @click=\"upload_file_request()\"\n            >\n              <v-icon dark>\n                mdi-plus\n              </v-icon>\n            </v-btn>\n            <v-file-input\n              class=\"ma-4\"\n              truncate-length=\"15\"\n              v-model=\"upload_file\"\n            ></v-file-input>\n        </v-card-content>\n      </v-card>\n      <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Search\"\n          single-line\n          hide-details\n          class=\"my-2\"\n      ></v-text-field>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"this.GET_STORAGE()\"\n        :items-per-page=\"10\"\n        :search=\"search\"\n        class=\"elevation-1 text-right\"\n      >\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <div class=\"d-flex justify-end\">\n            <StorageImportDialog v-bind:item=\"item\" class=\"mr-4\"/>\n            <DeleteStorageFileDialog :item=\"item\"/>\n            <v-btn\n              color=\"white\"\n              outlined\n              class=\"ma-2 white--text\"\n              :href=\"download_url(item)\"\n            >\n              Download\n              <v-icon\n                right\n                dark\n              >\n                mdi-download-circle\n              </v-icon>\n            </v-btn>\n          </div>\n        </template>\n      </v-data-table>\n  </v-container>\n</template>\n\n<script>\n  import DeleteStorageFileDialog from '@/components/DeleteStorageFileDialog.vue'\n  import StorageImportDialog from '@/components/StorageImportDialog.vue'\n  import {mapGetters} from 'vuex'\n  import apiClient from '@/plugins/backendClient.js'\n  import {mapActions} from 'vuex'\n\n  export default {\n    components: {\n        DeleteStorageFileDialog,\n        StorageImportDialog\n    },\n    data () {\n      return {\n        upload_file: {},\n        search: '',\n        headers: [\n          {\n            text: 'fileName',\n            align: 'start',\n            sortable: false,\n            value: 'name',\n          },\n          { text: 'size', value: 'size' },\n          { text: '', value: 'actions'}\n        ],\n      }\n    },\n    methods: {\n        ...mapGetters([\n          'GET_STORAGE',\n          'GET_CURRENT_PROJECT'\n        ]),\n        ...mapActions([\n           'REFRESH_CURRENT_PROJECT'\n        ]),\n        upload_file_request(){\n            console.log(this.upload_file)\n            let data = new FormData()\n            data.append('file', this.upload_file)\n            apiClient.post_upload_file(data, this.GET_CURRENT_PROJECT().id).then((response)=>{\n               console.log(response.data)\n               this.REFRESH_CURRENT_PROJECT(this.GET_CURRENT_PROJECT())\n            });\n        },\n       download_url(item){\n            return apiClient.server_endpoint + item.download\n       },\n    }\n  }\n</script>"]},"metadata":{},"sourceType":"module"}