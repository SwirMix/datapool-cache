{"ast":null,"code":"import apiClient from '@/plugins/backendClient.js';\nimport RemoteTokenDialog from '@/components/RemoteTokenDialog.vue';\nimport CreateProjectDialog from '@/components/CreateProjectDialog.vue';\nimport DeleteProjectDialog from '@/components/DeleteProjectDialog.vue';\nimport { mapGetters } from 'vuex';\nimport { mapActions } from 'vuex';\nimport { mapMutations } from 'vuex';\nexport default {\n  name: 'App',\n  components: {\n    RemoteTokenDialog,\n    CreateProjectDialog,\n    DeleteProjectDialog\n  },\n  data: () => ({\n    absolute: true,\n    overlay: true,\n    auth_data: {\n      login: '',\n      pass: ''\n    },\n    user: {\n      initials: 'you',\n      fullName: '',\n      email: ''\n    },\n    project: ''\n  }),\n  watch: {\n    project() {\n      this.REFRESH_CURRENT_PROJECT(this.project);\n    }\n\n  },\n  computed: {},\n  methods: { ...mapGetters(['GET_OVERLAY', 'GET_PROJECTS']),\n    ...mapActions(['REFRESH_PROJECTS', 'REFRESH_CURRENT_PROJECT']),\n    ...mapMutations(['SET_CURRENT_PROJECT']),\n\n    auth() {\n      apiClient.auth(this.auth_data).then(response => {\n        localStorage.setItem('http.datapool.token', response.data.token);\n        localStorage.setItem('http.datapool.login', response.data.login);\n        localStorage.setItem('http.datapool.email', response.data.email);\n        console.log(response.data);\n        this.overlay = false;\n        this.REFRESH_PROJECTS();\n        this.$router.push({\n          path: '/datapools'\n        });\n      });\n    },\n\n    logout() {\n      localStorage.removeItem('http.datapool.token');\n      this.overlay = true;\n    },\n\n    init() {\n      if (localStorage.getItem('http.datapool.token')) {\n        this.overlay = false;\n      } else {\n        this.overlay = true;\n      }\n\n      this.REFRESH_PROJECTS();\n      this.user.fullName = localStorage.getItem('http.datapool.login');\n      this.user.email = localStorage.getItem('http.datapool.email');\n    }\n\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  created() {\n    this.init();\n  }\n\n};","map":{"version":3,"mappings":"AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA,WADA;EAGAC;IACAC,iBADA;IAEAC,mBAFA;IAGAC;EAHA,CAHA;EASAC;IACAC,cADA;IAEAC,aAFA;IAGAC;MACAC,SADA;MAEAC;IAFA,CAHA;IAOAC;MACAC,eADA;MAEAC,YAFA;MAGAC;IAHA,CAPA;IAYAC;EAZA,EATA;EAuBAC;IACAD;MACA;IACA;;EAHA,CAvBA;EA4BAE,YA5BA;EA8BAC,WACA,eACA,aADA,EAEA,cAFA,EADA;IAKA,eACA,kBADA,EAEA,yBAFA,EALA;IASA,iBACA,qBADA,EATA;;IAYAC;MACAC;QACAC;QACAA;QACAA;QACAC;QACA;QACA;QACA;UAAAC;QAAA;MACA,CARA;IASA,CAtBA;;IAuBAC;MACAH;MACA;IACA,CA1BA;;IA2BAI;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MACA;MACA;MACA;IACA;;EApCA,CA9BA;;EAoEAC;IACA;EACA,CAtEA;;EAuEAC;IACA;EACA;;AAzEA","names":["name","components","RemoteTokenDialog","CreateProjectDialog","DeleteProjectDialog","data","absolute","overlay","auth_data","login","pass","user","initials","fullName","email","project","watch","computed","methods","auth","apiClient","localStorage","console","path","logout","init","mounted","created"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-app-bar\n      app\n      dark\n    >\n      <h2>HttpDatapool</h2>\n      <v-spacer></v-spacer>\n      <DeleteProjectDialog class=\"mr-3 ma-3\"/>\n      <v-select\n         class=\"mt-7 mr-4\"\n         :items=\"this.GET_PROJECTS()\"\n         label=\"Project\"\n         v-model=\"project\"\n      >\n        <template v-slot:item=\"{item}\">\n          {{item.name}} [{{item.id}}]\n        </template>\n        <template v-slot:selection=\"{item}\">\n          {{item.name}} [{{item.id}}]\n        </template>\n      </v-select>\n      <v-menu\n        bottom\n        min-width=\"200px\"\n        rounded\n        offset-y\n      >\n        <template v-slot:activator=\"{ on }\">\n          <v-btn\n            icon\n            x-large\n            v-on=\"on\"\n          >\n            <v-avatar\n              color=\"brown\"\n              size=\"48\"\n            >\n              <span class=\"white--text text-h5\">{{ user.initials }}</span>\n            </v-avatar>\n          </v-btn>\n        </template>\n        <v-card>\n          <v-list-item-content class=\"justify-center\">\n            <div class=\"mx-auto text-center\">\n              <v-avatar\n                color=\"brown\"\n              >\n                <span class=\"white--text text-h5\">{{ user.initials }}</span>\n              </v-avatar>\n              <h3>{{ user.fullName }}</h3>\n              <p class=\"text-caption mt-1\">\n                {{ user.email }}\n              </p>\n              <v-divider class=\"my-3\"></v-divider>\n              <RemoteTokenDialog/>\n              <v-divider class=\"my-3\"></v-divider>\n              <CreateProjectDialog/>\n              <v-divider class=\"my-3\"></v-divider>\n              <v-btn\n                depressed\n                rounded\n                text\n                @click=\"logout()\"\n              >\n                Logout\n              </v-btn>\n            </div>\n          </v-list-item-content>\n        </v-card>\n      </v-menu>\n    </v-app-bar>\n    <v-main>\n    <v-overlay\n      :value=\"this.overlay\"\n    >\n         <v-container fluid fill-height>\n            <v-layout align-center justify-center>\n                  <v-card style=\"width: 30rem;\">\n                     <v-toolbar dark color=\"primary\">\n                        <v-toolbar-title>Login form</v-toolbar-title>\n                     </v-toolbar>\n                     <v-card-text>\n                        <v-form>\n                           <v-text-field\n                              prepend-icon=\"mdi-account\"\n                              name=\"login\"\n                              v-model=\"auth_data.login\"\n                              label=\"Login\"\n                              type=\"text\"\n                           ></v-text-field>\n                           <v-text-field\n                              id=\"password\"\n                              prepend-icon=\"mdi-lock\"\n                              name=\"password\"\n                              v-model=\"auth_data.pass\"\n                              label=\"Password\"\n                              type=\"password\"\n                           ></v-text-field>\n                        </v-form>\n                     </v-card-text>\n                     <v-card-actions>\n                        <v-spacer></v-spacer>\n                        <v-btn color=\"primary\" @click=\"auth()\">Login</v-btn>\n                     </v-card-actions>\n                  </v-card>\n            </v-layout>\n         </v-container>\n    </v-overlay>\n    <router-view/>\n    </v-main>\n    <v-bottom-navigation v-model=\"value\">\n        <v-btn value=\"Caches\" text class=\"my-2\" to=\"/\">\n          <span>Caches</span>\n          <v-icon>mdi-database</v-icon>\n        </v-btn>\n        <v-btn value=\"Storage\" text class=\"my-2\" to=\"/storage\">\n          <span>CSV Storage</span>\n          <v-icon>mdi-nas</v-icon>\n        </v-btn>\n        <v-btn value=\"Static parameters\" text class=\"my-2\" to=\"/params\">\n          <span>Static parameters</span>\n          <v-icon>mdi-star-settings</v-icon>\n        </v-btn>\n        <v-btn value=\"Cluster\" text class=\"my-2\" to=\"/cluster\">\n          <span>Datapool Cluster</span>\n          <v-icon>mdi-webpack</v-icon>\n        </v-btn>\n    </v-bottom-navigation>\n  </v-app>\n</template>\n\n<script>\nimport apiClient from '@/plugins/backendClient.js'\nimport RemoteTokenDialog from '@/components/RemoteTokenDialog.vue'\nimport CreateProjectDialog from '@/components/CreateProjectDialog.vue'\nimport DeleteProjectDialog from '@/components/DeleteProjectDialog.vue'\nimport {mapGetters} from 'vuex'\nimport {mapActions} from 'vuex'\nimport {mapMutations} from 'vuex'\n\nexport default {\n  name: 'App',\n\n  components: {\n    RemoteTokenDialog,\n    CreateProjectDialog,\n    DeleteProjectDialog\n  },\n\n  data: () => ({\n    absolute: true,\n    overlay: true,\n    auth_data: {\n       login: '',\n       pass: ''\n    },\n    user: {\n       initials: 'you',\n       fullName: '',\n       email: '',\n    },\n    project: ''\n  }),\n  watch: {\n     project() {\n        this.REFRESH_CURRENT_PROJECT(this.project)\n     },\n  },\n  computed: {\n  },\n  methods: {\n    ...mapGetters([\n      'GET_OVERLAY',\n      'GET_PROJECTS'\n    ]),\n    ...mapActions([\n       'REFRESH_PROJECTS',\n       'REFRESH_CURRENT_PROJECT'\n    ]),\n    ...mapMutations([\n       'SET_CURRENT_PROJECT'\n    ]),\n    auth(){\n        apiClient.auth(this.auth_data).then((response)=>{\n           localStorage.setItem('http.datapool.token', response.data.token);\n           localStorage.setItem('http.datapool.login', response.data.login);\n           localStorage.setItem('http.datapool.email', response.data.email);\n           console.log(response.data)\n           this.overlay = false\n           this.REFRESH_PROJECTS()\n           this.$router.push({ path: '/datapools' })\n        })\n    },\n    logout(){\n       localStorage.removeItem('http.datapool.token');\n       this.overlay=true\n    },\n    init(){\n        if (localStorage.getItem('http.datapool.token')){\n            this.overlay = false;\n        } else {\n            this.overlay = true;\n        }\n        this.REFRESH_PROJECTS()\n        this.user.fullName = localStorage.getItem('http.datapool.login')\n        this.user.email = localStorage.getItem('http.datapool.email')\n    }\n  },\n  mounted(){\n    this.init()\n  },\n  created(){\n    this.init()\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}