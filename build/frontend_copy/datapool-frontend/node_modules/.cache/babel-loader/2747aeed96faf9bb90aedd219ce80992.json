{"ast":null,"code":"import axios from 'axios';\nvar apiClient = {\n  server_endpoint: 'http://localhost:8086/',\n  api: {\n    post_auth: 'api/v1/account/auth',\n    remote_token_auth: 'api/v1/account/remote/auth',\n    get_projects: 'api/v1/projects/',\n    get_caches: 'api/v1/caches',\n    get_storage: 'api/v1/storage',\n    post_reload_cache: 'api/v1/storage/reload',\n    post_reload_internal_cache: 'api/v1/datapool/cache',\n    delete_cache: 'api/v1/datapool/cache',\n    delete_file: 'api/v1/storage',\n    post_upload_file: 'api/v1/storage/upload',\n    post_import_cache_to_file: 'api/v1/storage/import',\n    post_cache_from_jdbc: 'api/v1/datapool/cache/create',\n    get_cluster: 'api/v1/cluster'\n  },\n\n  auth(request) {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json'\n      },\n      method: 'POST'\n    };\n    return axios.post(this.server_endpoint + this.api.post_auth, request, config);\n  },\n\n  remote_auth() {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    return axios.get(this.server_endpoint + this.api.remote_token_auth, config);\n  },\n\n  get_cluster_info() {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'GET'\n    };\n    return axios.get(this.server_endpoint + this.api.get_cluster, config);\n  },\n\n  get_projects() {\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'GET'\n    };\n    return axios(this.server_endpoint + this.api.get_projects, config);\n  },\n\n  get_caches(project) {\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'GET'\n    };\n    return axios(this.server_endpoint + this.api.get_caches + '?project=' + project, config);\n  },\n\n  get_storage(project) {\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'GET'\n    };\n    return axios(this.server_endpoint + this.api.get_storage + '?storage_id=' + project, config);\n  },\n\n  delete_cache(cacheName) {\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'DELETE'\n    };\n    return axios(this.server_endpoint + this.api.delete_cache + '/' + cacheName, config);\n  },\n\n  delete_file(project, file) {\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'DELETE'\n    };\n    return axios(this.server_endpoint + this.api.delete_file + '/' + project + '/' + file, config);\n  },\n\n  import_cache_request(cache, fileName) {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    let data = {\n      cacheName: cache.cacheName,\n      fileName: fileName,\n      override: true,\n      project: cache.baseProject\n    };\n    return axios.post(this.server_endpoint + this.api.post_import_cache_to_file, data, config);\n  },\n\n  post_reload_cache(project_id, fileName) {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    let data = {};\n    return axios.post(this.server_endpoint + this.api.post_reload_cache + '?fileName=' + fileName + '&project=' + project_id, data, config);\n  },\n\n  post_reload_all(project_id) {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    let data = {};\n    return axios.post(this.server_endpoint + this.api.post_reload_cache + '?project=' + project_id, data, config);\n  },\n\n  post_reload_internal_cache(cacheName) {\n    console.log(this.type);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    let data = {};\n    return axios.post(this.server_endpoint + this.api.post_reload_internal_cache + '/' + cacheName, data, config);\n  },\n\n  post_upload_file(file, project_id) {\n    console.log(this.file);\n    var config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    return axios.post(this.server_endpoint + this.api.post_upload_file + '?project=' + project_id, file, config);\n  },\n\n  post_jdbc_cache(body) {\n    console.log(body);\n    var config = {\n      headers: {\n        'content-type': 'application/json',\n        'token': localStorage.getItem('http.datapool.token')\n      },\n      method: 'POST'\n    };\n    return axios.post(this.server_endpoint + this.api.post_cache_from_jdbc, body, config);\n  }\n\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","server_endpoint","api","post_auth","remote_token_auth","get_projects","get_caches","get_storage","post_reload_cache","post_reload_internal_cache","delete_cache","delete_file","post_upload_file","post_import_cache_to_file","post_cache_from_jdbc","get_cluster","auth","request","console","log","type","config","headers","method","post","remote_auth","localStorage","getItem","get","get_cluster_info","project","cacheName","file","import_cache_request","cache","fileName","data","override","baseProject","project_id","post_reload_all","post_jdbc_cache","body"],"sources":["/home/ponchick/Desktop/datapool-service/service-source/build/frontend/datapool-frontend/src/plugins/backendClient.js"],"sourcesContent":["import axios from 'axios'\n\nvar apiClient = {\n  server_endpoint: 'http://localhost:8086/',\n  api: {\n     post_auth: 'api/v1/account/auth',\n     remote_token_auth: 'api/v1/account/remote/auth',\n     get_projects: 'api/v1/projects/',\n     get_caches: 'api/v1/caches',\n     get_storage: 'api/v1/storage',\n     post_reload_cache: 'api/v1/storage/reload',\n     post_reload_internal_cache: 'api/v1/datapool/cache',\n     delete_cache: 'api/v1/datapool/cache',\n     delete_file: 'api/v1/storage',\n     post_upload_file: 'api/v1/storage/upload',\n     post_import_cache_to_file: 'api/v1/storage/import',\n     post_cache_from_jdbc: 'api/v1/datapool/cache/create',\n     get_cluster: 'api/v1/cluster'\n  },\n\n  auth(request) {\n    console.log(this.type);\n    var config = {\n        headers: {'content-type': 'application/json'},\n        method: 'POST'\n    };\n    return axios.post(this.server_endpoint + this.api.post_auth, request, config)\n  },\n\n  remote_auth() {\n    console.log(this.type);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST'\n    };\n    return axios.get(this.server_endpoint + this.api.remote_token_auth, config)\n  },\n\n  get_cluster_info() {\n    console.log(this.type);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'GET'\n    };\n    return axios.get(this.server_endpoint + this.api.get_cluster, config)\n  },\n\n  get_projects() {\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'GET'\n    };\n    return axios(this.server_endpoint + this.api.get_projects, config);\n  },\n  get_caches(project) {\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'GET'\n    };\n    return axios(this.server_endpoint + this.api.get_caches + '?project=' + project, config);\n  },\n  get_storage(project) {\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'GET'\n    };\n    return axios(this.server_endpoint + this.api.get_storage + '?storage_id=' + project, config);\n  },\n  delete_cache(cacheName){\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'DELETE'\n    };\n    return axios(this.server_endpoint + this.api.delete_cache + '/' + cacheName, config);\n  },\n\n  delete_file(project, file){\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'DELETE'\n    };\n    return axios(this.server_endpoint + this.api.delete_file + '/' + project + '/' + file, config);\n  },\n\n  import_cache_request(cache, fileName){\n   console.log(this.type);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST',\n    };\n    let data = {\n      cacheName: cache.cacheName,\n      fileName: fileName,\n      override: true,\n      project: cache.baseProject\n    }\n    return axios.post(this.server_endpoint + this.api.post_import_cache_to_file, data, config)\n  },\n\n  post_reload_cache(project_id, fileName){\n   console.log(this.type);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST',\n    };\n    let data = {}\n    return axios.post(this.server_endpoint + this.api.post_reload_cache + '?fileName=' + fileName + '&project=' + project_id, data, config)\n  },\n\n  post_reload_all(project_id){\n   console.log(this.type);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST',\n    };\n    let data = {}\n    return axios.post(this.server_endpoint + this.api.post_reload_cache + '?project=' + project_id, data, config)\n  },\n\n  post_reload_internal_cache(cacheName){\n   console.log(this.type);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST',\n    };\n    let data = {}\n    return axios.post(this.server_endpoint + this.api.post_reload_internal_cache + '/' + cacheName, data, config)\n  },\n  post_upload_file(file, project_id){\n   console.log(this.file);\n    var config = {\n        headers: {\n            'content-type': 'multipart/form-data',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST',\n    };\n    return axios.post(this.server_endpoint + this.api.post_upload_file + '?project=' + project_id , file, config)\n  },\n\n  post_jdbc_cache(body){\n   console.log(body);\n    var config = {\n        headers: {\n            'content-type': 'application/json',\n            'token': localStorage.getItem('http.datapool.token')\n        },\n        method: 'POST',\n    };\n    return axios.post(this.server_endpoint + this.api.post_cache_from_jdbc , body, config)\n  }\n};\n\nexport default apiClient"],"mappings":"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"},"metadata":{},"sourceType":"module"}